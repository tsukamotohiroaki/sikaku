LPIC_Lv1-101(Ver5.0)
1.システムアーキテクチャ
■ハードウェア設定の決定と設定
・ロードされているカーネルモジュールの情報を表示するコマンド
lsmod
cat /proc/modules

・I/Oポートアドレスの情報
「/proc/ioports」ファイルで確認できる

・メモリの使用状況
「/proc/meminfo」ファイルで確認できる

・udevが使用するデバイス設定情報ファイルの所在
「/etc/udev/rules.d」に配置される

・modprobeの設定ファイル
/etc/modprobe.d/myconfig.conf

・起動中のプロセスやカーネルが認識しているハードウェアおよびシステムリソースなどの情報が格納されているディレクトリ
/proc

・modprobeの設定ファイルに記述する設定内容
options: 各カーネルモジュールのデフォルトパラメータを指定する
alias: カーネルモジュールに別名をつける
install: 特定のカーネルモジュールのロード時に実行されるコマンドを指定する
remove: 特定のカーネルモジュールのアンロード時に実行されるコマンドを指定する
blacklist: ロードしたくないカーネルモジュールを指定する

・SCSIデバイスに関する情報が確認できるファイル
/proc/scsi/scsi

・接続されたUSBデバイスの情報を表示するコマンド
lsusb
/proc/bus/usb/devices

・スピーカー、マイクなどが属しているUSBのデバイスクラス
Audio Class

・D-Bus（Desktop Bus）について
Linuxで使われるプロセス間通信機構

・モデム、TA(ターミナルアダプタ)などが属しているUSBのデバイスクラス
ACM Communication Device Class

・ホットプラグデバイスを接続した際に、デバイスファイルを動的に作成する仕組み
udev(Userspace DEVice management)

・ハードディスク、USBメモリーなどが属しているUSBのデバイスクラス
Mass Storage Class

・依存関係を考慮してカーネルモジュールをロードまたはアンロードするコマンド
modprobe

・PCIデバイスの情報を表示するコマンド
lspci
/proc/bus/pci/devices
※PCI(Peripheral Components Interconnect)デバイスとは、PCIバスに接続されたデバイスのこと

・デバイスが使用中のDMAチャネルに関する情報が確認できるファイル
/proc/dma
※DMAとは、CPUを介することなくメインメモリと周辺機器の間で直接的に情報転送を行う方式のこと

・lspciコマンドで取得できる情報
I/Oポートアドレス
ベンダー名（ベンダーID）
バスの速度
IRQ番号

・IRQに関する情報が格納されているファイル
/proc/interrupts
※IRQ(Interrupt ReQuest)とは、マウスやキーボードなどの周辺機器(デバイス)からCPUへの割り込み要求のこと

・BIOS/UEFIで設定できるもの
起動デバイスの優先順位
デバイスの有効/無効化

・キーボード、マウスなどが属しているUSBのデバイスクラス
HID(Human Interface Devices)

・CPUに関する情報を確認できるファイル
/proc/cpuinfo

・大容量記憶装置の特徴
SSDとUSBフラッシュドライブは、HDDのような機械的な故障が起きない
容量あたりのコストパフォーマンスが高いのはHDDである
OSの起動ディスクとして使用できる
SSDはSATAインターフェース以上の速度でアクセスできる

■システムの起動
・従来のinitプログラムを置き換えるsystemdの特徴
扱う処理をUnitという単位で管理する
サービスの並列起動によって高速なシステム起動や停止が行える
cgroupsでプロセスのリソースを管理する

・systemctlコマンドを使って、postfixサービスに設定ファイルを再読み込みさせるコマンド
systemctl reload postfix

・systemdが管理するサービスを再起動させるためのsystemctlコマンドのサブコマンド
restart

・systemdの管理単位であるユニット
※Unitには各機能ごとに拡張子が割り当てられており、拡張子を見ることでどういった機能のためのUnitかが判別できるようになっています。
device：各種デバイスを管理するUnit
mount：ファイルシステムのマウントを管理するUnit
service：サービスを制御するUnit
swap：スワップ領域を管理するUnit
target：複数のサービスを一つのグループにするためのUnit

・systemdが利用できるユニットの一覧を取得するコマンド
systemctl list-unit-files

・systemdが稼働するシステムにおいて、各サービスが稼働しているかを確認するためのサブコマンド
is-active
例)systemctl is-active sshd

・各サービスの稼働状況や起動設定を管理するにはsystemctlコマンド
systemctl status httpd

・systemdを管理するためのコマンド
systemctl

・systemdの動作するシステムにおいて、各サービスが出力するログを扱うデーモンプロセス
systemd-journald

・systemdが稼働するシステムにおいてpostfixサービスを停止するコマンド
systemctl stop postfix

・systemdが稼働するシステムにおいてmysqldサービスを起動するコマンド
systemctl start mysqld

・systemdが稼働するシステムにおいて、システム起動時にhttpdサービスが自動起動しないようにしたい。実行すべきコマンド
systemctl disable httpd

・systemdが管理するジャーナル（システムログ）を参照するためのコマンド
journalctl
※systemdの動作するシステムではsystemd-journaldデーモンを動作させ、ログの一元管理を行います。

・systemdが稼働するシステムにおいて、システム起動時にhttpdサービスが自動起動するようにしたい。実行すべきコマンド
systemctl enable httpd

・journalctlコマンドのオプションで、dmesgコマンドと同じ情報を得られるオプション
-k
--dmesg

・SysVinitを採用したシステムの起動時におけるinitの説明
設定ファイル「/etc/inittab」の記述に基づいて、自動起動するべきプロセスを立ちあげるなど、アプリケーションレベルの初期化を行う

・BIOSの機能についての説明
電源を入れると起動し、記憶装置（HDD）等に関して最低限の認識を行う
起動する順にデバイスの先頭セクタにあるMBRを読み込み、ブートローダが得られたら制御を移す
起動デバイスの順序を設定できる

・UEFIの特徴
GUIでの操作が可能となる
最初にアクセスされる領域であるESPは「/boot/efi」にマウントされる
GPTというパーティション形式に対応しており、3TB以上のHDDからの起動をサポートする

・Linux システムの起動順序（ブートプロセス）
BIOS/UEFI → ブートローダ → カーネル → init

・システム起動時においてのブートローダの説明
記憶装置（HDD）内のカーネルをロードし、制御を移す

・初期RAMディスクの説明
ファイルシステムへアクセスするのに必要なドライバやスクリプトが含まれている
カーネルイメージと同様に「/boot」ディレクトリに格納される
カーネルのバージョンごとに内容が異なる

・カーネルのログが記録されるなど、Linuxでメインで使用されるログファイル
/var/log/messages

・起動時にカーネルが出力したメッセージを表示するコマンド
dmesg

・システム起動時にブートローダからカーネルに渡されたパラメータが確認できるファイル
/proc/cmdline

・マシンを再起動せずにカーネルのリングバッファの内容をクリアするコマンド
dmesg --clear
※dmesgコマンドはカーネルが出力するメッセージが格納されるリングバッファの内容を出力します。

・システム起動時においてのカーネルの説明
高度にハードウェアを認識・制御し、ルートファイルシステムのマウントなど様々な初期化処理を行う
/sbin/initを起動する

・Linuxがハードディスクから正常に起動できなくなった場合、インストールDVDを用いて試してみるべきこととして適切なもの
レスキューモードでの起動を試みる
ハードディスク内のログを確認する

・initプログラムであるUpstartの特徴
サービスやタスクを「ジョブ」という単位で扱う
イベント駆動型
サービスの並列起動処理が可能

・initのPID(プロセス ID)
1
※initは最初に起動されるプロセスで、PID（プロセス ID）は必ず1です。

・100GBの記憶装置(HDD)を接続したが、実際の半分以下の容量で認識されてしまった。次のうち、もっとも適切な解決方法
BIOSをアップデートする

