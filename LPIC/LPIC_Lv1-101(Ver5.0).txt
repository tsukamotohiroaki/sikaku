LPIC_Lv1-101(Ver5.0)
1.システムアーキテクチャ
■ハードウェア設定の決定と設定
・BIOS/UEFIで設定できるもの
起動デバイスの優先順位
デバイスの有効/無効化

・キーボード、マウスなどが属しているUSBのデバイスクラス
HID(Human Interface Devices)

・スピーカー、マイクなどが属しているUSBのデバイスクラス
Audio Class

・D-Bus（Desktop Bus）についての説明
Linuxで使われるプロセス間通信機構

・モデム、TA(ターミナルアダプタ)などが属しているUSBのデバイスクラス
ACM Communication Device Class

・ホットプラグデバイスを接続した際に、デバイスファイルを動的に作成する仕組み
udev(Userspace DEVice management)

・ハードディスク、USBメモリーなどが属しているUSBのデバイスクラス
Mass Storage Class

・lspciコマンドで取得できる情報
I/Oポートアドレス
ベンダー名（ベンダーID）
バスの速度
IRQ番号

・大容量記憶装置の特徴
SSDとUSBフラッシュドライブは、HDDのような機械的な故障が起きない
容量あたりのコストパフォーマンスが高いのはHDDである
OSの起動ディスクとして使用できる
SSDはSATAインターフェース以上の速度でアクセスできる

・modprobeの設定ファイルに記述する設定内容
options: 各カーネルモジュールのデフォルトパラメータを指定する
alias: カーネルモジュールに別名をつける
install: 特定のカーネルモジュールのロード時に実行されるコマンドを指定する
remove: 特定のカーネルモジュールのアンロード時に実行されるコマンドを指定する
blacklist: ロードしたくないカーネルモジュールを指定する

・依存関係を考慮してカーネルモジュールをロードまたはアンロードするコマンド
modprobe

・起動中のプロセスやカーネルが認識しているハードウェアおよびシステムリソースなどの情報が格納されているディレクトリ
/proc

・CPUに関する情報を確認できるファイル
/proc/cpuinfo

・メモリの使用状況を確認できるファイル
/proc/meminfo

・I/Oポートアドレスの情報を確認できるファイル
/proc/ioports

・SCSIデバイスに関する情報が確認できるファイル
/proc/scsi/scsi

・接続されたUSBデバイスの情報を表示するコマンド
lsusb
cat /proc/bus/usb/devices

・PCIデバイスの情報を表示するコマンド
lspci
cat /proc/bus/pci/devices
※PCI(Peripheral Components Interconnect)デバイスとは、PCIバスに接続されたデバイスのこと

・ロードされているカーネルモジュールの情報を表示するコマンド
lsmod
cat /proc/modules

・デバイスが使用中のDMAチャネルに関する情報が確認できるファイル
/proc/dma
※DMAとは、CPUを介することなくメインメモリと周辺機器の間で直接的に情報転送を行う方式のこと

・IRQに関する情報が格納されているファイル
/proc/interrupts
※IRQ(Interrupt ReQuest)とは、マウスやキーボードなどの周辺機器(デバイス)からCPUへの割り込み要求のこと

・udevが使用するデバイス設定情報ファイルの所在
/etc/udev/rules.d

・modprobeの設定ファイル
/etc/modprobe.d/myconfig.conf

■システムの起動
・Linux システムの起動順序（ブートプロセス）
BIOS/UEFI → ブートローダ → カーネル → init

・システム起動時においてのブートローダの説明
記憶装置（HDD）内のカーネルをロードし、制御を移す

・BIOSの特徴
電源を入れると起動し、記憶装置（HDD）等に関して最低限の認識を行う
起動する順にデバイスの先頭セクタにあるMBRを読み込み、ブートローダが得られたら制御を移す
起動デバイスの順序を設定できる

・UEFIの特徴
GUIでの操作が可能となる
最初にアクセスされる領域であるESPは「/boot/efi」にマウントされる
GPTというパーティション形式に対応しており、3TB以上のHDDからの起動をサポートする

・システム起動時においてのカーネルの説明
高度にハードウェアを認識・制御し、ルートファイルシステムのマウントなど様々な初期化処理を行う
/sbin/initを起動する

・従来のinitプログラムを置き換えるsystemdの特徴
扱う処理をUnitという単位で管理する
サービスの並列起動によって高速なシステム起動や停止が行える
cgroupsでプロセスのリソースを管理する

・SysVinitを採用したシステムの起動時におけるinitの説明
設定ファイル「/etc/inittab」の記述に基づいて、自動起動するべきプロセスを立ちあげるなど、アプリケーションレベルの初期化を行う

・systemdの管理単位であるユニット
※Unitには各機能ごとに拡張子が割り当てられており、拡張子を見ることでどういった機能のためのUnitかが判別できるようになっています。
device：各種デバイスを管理するUnit
mount：ファイルシステムのマウントを管理するUnit
service：サービスを制御するUnit
swap：スワップ領域を管理するUnit
target：複数のサービスを一つのグループにするためのUnit

・initプログラムであるUpstartの特徴
サービスやタスクを「ジョブ」という単位で扱う
イベント駆動型
サービスの並列起動処理が可能

・100GBの記憶装置(HDD)を接続したが、実際の半分以下の容量で認識されてしまった場合の解決方法
BIOSをアップデートする

・Linuxがハードディスクから正常に起動できなくなった場合、インストールDVDを用いて試してみるべきこととして適切なもの
レスキューモードでの起動を試みる
ハードディスク内のログを確認する

・システム起動時にブートローダからカーネルに渡されたパラメータが確認できるファイル
/proc/cmdline

・カーネルのログなどが記録されるLinuxでメインのログファイル
/var/log/messages

・起動時にカーネルが出力したメッセージを表示するコマンド
dmesg

・マシンを再起動せずにカーネルのリングバッファの内容をクリアするコマンド
dmesg --clear
※dmesgコマンドはカーネルが出力するメッセージが格納されるリングバッファの内容を出力する。

・initのPID(プロセス ID)
1
※initは最初に起動されるプロセスで、PID（プロセス ID）は必ず1です。

・systemctlコマンドを使って、postfixサービスに設定ファイルを再読み込みさせるコマンド
systemctl reload postfix

・systemdが管理するサービスを再起動させるためのsystemctlコマンドのサブコマンド
restart

・systemdが利用できるユニットの一覧を取得するコマンド
systemctl list-unit-files

・systemdが稼働するシステムにおいて、各サービスが稼働しているかを確認するためのサブコマンド
is-active
例)systemctl is-active sshd

・各サービスの稼働状況や起動設定を管理するにはsystemctlコマンド
systemctl status httpd

・systemdを管理するためのコマンド
systemctl

・systemdの動作するシステムにおいて、各サービスが出力するログを扱うデーモンプロセス
systemd-journald

・systemdが稼働するシステムにおいてpostfixサービスを停止するコマンド
systemctl stop postfix

・systemdが稼働するシステムにおいてmysqldサービスを起動するコマンド
systemctl start mysqld

・systemdが稼働するシステムにおいて、システム起動時にhttpdサービスが自動起動させないためのコマンド
systemctl disable httpd

・systemdが稼働するシステムにおいて、システム起動時にhttpdサービスが自動起動するためのコマンド
systemctl enable httpd

・systemdが管理するジャーナル（システムログ）を参照するためのコマンド
journalctl
※systemdの動作するシステムではsystemd-journaldデーモンを動作させ、ログの一元管理を行います。

・journalctlコマンドのオプションで、dmesgコマンドと同じ情報を得られるオプション
-k
--dmesg

■ランレベル/ブートターゲットの変更
・SysVinitを採用したシステムの特徴
ランレベル3では「/etc/rc3.d」配下のスクリプトが実行される
※SysVinitでは、システムの起動時やランレベルの変更時にinitが「/etc/inittab」を参照し、ランレベルに応じたスクリプトを実行して各種サービスを順に起動/停止していきます。
※各ランレベルに応じたスクリプトは「/etc/rc[0-6].d」に入っています。

・SysVinitを採用したシステムにおいて、シングルユーザモードでのブートプロセス中にサービスを停止させるファイル
/etc/rc1.d/K01bluetooth
※SysVinitでは、システムの起動時やランレベルの変更時にinitが「/etc/inittab」を参照し、ランレベルに応じたスクリプトを実行して各種サービスを順に起動/停止していきます。
※各ランレベルに応じたスクリプトは「/etc/rc[0-6].d」に入っています。

・SysVinitを採用したシステムの設定ファイルで、デフォルトのランレベルの設定ファイル
/etc/inittab

・SysVinitを採用したシステムにおいて、「ctrl+alt+del」キーを押下した際のシステムの動作を設定するファイル
/etc/inittab

・SysVinitの設定ファイル「/etc/inittab」を編集した。即座に変更を反映させるコマンド
init Q
telinit q
※/etc/inittabファイルとは、OSを起動する際、OSの起動を司る「initプロセス」が利用するファイルです。
※/etc/inittabファイルは、デフォルトのランレベルの指定、デバイスなどの初期化、initの起動、ブート時の処理、ランレベルごとのrcスクリプトの実行などを指示します。
※SysVinitの設定ファイル「/etc/inittab」ファイルは通常Linuxシステムの起動時に読み込まれます。
※initまたはtelinitコマンドに「q」か「Q」オプションを指定して実行すると、「/etc/inittab」を再読み込みさせ即座に変更を反映させることができます。

・「/etc/inittab」を設定ファイルとして使用しないinitプログラム
Upstart
systemd
※Upstartやsystemdは、従来のSysVinitと比べてシステム起動時の初期化作業が高速化されています。
※Upstarは、イベント駆動型の初期化プロセス
※Upstartでは初期化時の依存関係を定義する必要がある
※Upstartは「/etc/event.d/rc-default」ファイルの「telinit 2」の部分を編集することでデフォルトのランレベルを設定できます。
※systemdでは、「/lib/systemd/system/runlevel[0-6].target」ファイル([0-6]部分はランレベルを指定)のシンボリックリンクを「/etc/systemd/system/default.target」として作成することでデフォルトのランレベルを設定できます。

・systemdの動作するシステムにおいて、次回起動時にメンテナンスを行うために最低限のシステムサービス状態で起動させたい。次回起動時のターゲットとしてどれを指定すればよいか
rescue.target
runlevel1.target

・systemdの動作するシステムにおいて、メンテナンスのために以下のコマンドでシングルユーザーモードに変更し、作業を行った。
# systemctl rescue
作業が終わったので通常の起動状態に戻したい。どうすれば良いか
Ctrl-Dを入力する
systemctl reboot コマンドを実行する
systemctl default コマンドを実行する

・systemdが稼働するシステムにおいて、次回起動時のランレベルの確認作業を行った。
/etc/systemd/system
default.target

・systemdが稼働するシステムにおいて、次回起動時のターゲットが確認できるsystemctlのサブコマンド
get-default

・systemdが稼働するシステムにおいて、次回起動時のターゲットを設定するためのsystemctlのサブコマンド
set-default

・systemdが稼働するシステムにおいて、次回起動時にグラフィカルログインさせるコマンド
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/graphical.target /etc/systemd/system/default.target

・systemdが稼働するシステムにおいて、次回起動時にグラフィカルログインさせるコマンド
systemctl set-default graphical.target

・systemdの動作するシステムにおいて、サーバとして動作させるのに適切な起動時のターゲット
runlevel3.target
multi-user.target

・すでにマルチユーザモードで起動しているシステムをメンテナンスのためにシングルユーザモードに変更するコマンド
init s
telinit 1
telinit S

・ランレベル6の説明
システム再起動

・デフォルトのランレベルとして、設定してはいけないもの
0
6

・現在のランレベルを、どのランレベルにでも変更できるコマンド
init
telinit

・現在および1つ前のランレベルを調べることができるコマンド
runlevel

・マルチユーザモードとなるランレベル
2
3
5

・ランレベル0の説明
システム停止
※ランレベルとはLinuxの動作モードのことです。

・systemctl start poweroff.target を実行すると何が起こるか
システム終了処理が行われる
telinit 0と同じことが起こる

・システムを今すぐ再起動させるコマンド
reboot
telinit 6
shutdown -r now

・23:00にシステムを停止するようshutdownコマンドをキャンセルするコマンド
shutdown -c

・現在22:50である。「Rebooting in 10 minutes」というメッセージを表示して、23:00にサーバを再起動するコマンド
shutdown -r 23:00 "Rebooting in 10 minutes"
shutdown -r +10 "Rebooting in 10 minutes"

・現在22:00である。23:00にサーバを停止するコマンド
shutdown -h 23:00
shutdown -h +60

・システムを今すぐ再起動させるコマンド
telinit 6
shutdown -r now
systemctl reboot
systemctl start reboot.target

・シャットダウン処理を行わず、メッセージ通知のみを行うshutdownコマンドのオプション
-k

・システムを停止させるsystemctlコマンドのサブコマンド
halt
poweroff

・ログイン中の全ユーザーにメッセージを送信するコマンド
wall

・電源管理に関するACPIイベントを監視・処理するデーモン
acpid

2.Linuxのインストールとパッケージ管理
■ハードディスクのレイアウト設計
・物理的な記憶デバイスの領域をまとめ、それを論理的なひとつの大きな記憶デバイスとして扱うことで、物理的なパーティションの仕様に由来する制限を回避できるシステム
LVM

・LVMの説明
論理ボリュームを動的にリサイズすることができる
ボリュームグループは、物理ボリュームを集めて構成された仮想的な領域である
ボリュームグループに対し、後から物理ボリュームを加えたり、削除したりできる
スナップショットを取得することができる

・ESP（EFIシステムパーティション）の説明
UEFIを使ったシステムの領域である
ブートローダや起動に必要なドライバなどが置かれている

・論理ボリュームを作成するまでの手順
pvcreate, vgcreate, lvcreate
※物理ボリューム(PV)の作成：pvcreateコマンド
※ボリュームグループ(VG)の作成：vgcreateコマンド
※論理ボリューム(LV)の作成：lvcreateコマンド

・Linuxシステムを構築するに当たって、推奨構成として必要なパーティション
ルートパーティション
スワップ領域

・Linuxをインストールする際、ルートパーティションから分割できないディレクトリ
/lib
/dev
/sbin

・Linuxをインストールする際、ルートパーティションから分割できないディレクトリ
/bin
/sbin
/etc

・Linuxをインストールする際、ルートパーティションとは別のパーティションを割り当てる事が可能なディレクトリ
/boot
/tmp

・Linuxをインストールする際、ルートパーティションとは別のパーティションを割り当てる事が可能なディレクトリ
/home
/usr
/tmp
/var

・一般ユーザが書き込みできることによりディスク使用量が大きくなる可能性が高いため、ルートパーティションとは別のパーティションを割り当てた方がよいディレクトリ
/home
/tmp

・システム管理者用のコマンドを格納するディレクトリ
/sbin

・一時ファイルを格納するためのディレクトリで、再起動すると中身が削除されるディレクトリ
/tmp

・Linuxカーネルなど、システムを起動するために必須のファイルを格納するディレクトリ
/boot

・パーティションの設計について
/varは高速に書き込みできるディスクに割り当てる

・システム固有の設定ファイルを格納するディレクトリ
/etc

・ユーザ数百人が利用すると想定されるファイルサーバを構築したい。ルートパーティションとは別のパーティションとして構成した方がよいと考えられるディレクトリ
/home

・デバイスファイルを格納するディレクトリ
/dev

・追加のパッケージが格納され、ルートパーティションとは別のパーティションを割り当てた方がよいディレクトリ
/opt

・システムの起動には必須で無いプログラムやライブラリが格納されたディレクトリ
/usr

共有ライブラリを格納するディレクトリ
/lib

・アプリケーションのログファイルや一時的な電子メールファイルなど、可変ファイル群を格納するディレクトリ
/var

・一般ユーザ用のコマンドを格納するディレクトリ
/bin

・スワップ領域の説明
物理メモリが1GBの場合、物理メモリの2倍程度のサイズにする

・512MBのメモリを搭載したシステムがある。適切なswap領域のサイズ
1GB

■ブートマネージャのインストール
・GRUB LegacyとGRUB2の説明
GRUB Legacyの設定ファイルは「/boot/grub/menu.lst」である
GRUBのバージョンが1.9以降のものを「GRUB2」と呼ぶ
パーティション番号は、GRUB Legacyは0から、GRUB2は1から数える

・GRUB2の設定ファイルにおいて、各項目の名前としてメニューに表示するエントリ名を指定する項目
menuentry

・ブートローダであるGRUB Legacyの設定ファイル
/boot/grub/menu.lst
/boot/grub/grub.conf

・ブートローダであるGRUB2の設定ファイル
/boot/grub/grub.cfg
※「/boot/grub/grub.cfg」ファイルを直接編集することはありません。設定内容は「/etc/default/grub」ファイルおよび「/etc/grub.d」ディレクトリ内のファイルに記述し、「grub-mkconfig」コマンドで設定内容を「/boot/grub/grub.cfg」ファイルに反映させます。

・ブートローダであるGRUB Legacyの設定ファイル「/boot/grub/menu.lst」を編集した。変更内容を反映させるコマンド
実行するコマンドはない
※GRUB Legacy（GRUB1）は設定ファイル「/boot/grub/menu.lst」を変更しても、実行するコマンドはありません。

・ブートローダであるGRUB2の設定ファイルの内容を変更したい。変更内容を反映させるコマンド
grub-mkconfig

・GRUB2の設定ファイルにおいて、ロードするモジュールを指定する項目
insmod

・GRUB2の設定を直接編集できるファイル
/etc/default/grub
「/etc/grub.d」ディレクトリ内のファイル

・ブートローダであるGRUB LegacyまたはGRUB2をインストールするコマンド
grub-install

・GRUB Legacyの設定ファイル「/boot/grub/menu.lst」において、ルートパーティションを2番目のディスクの3番目のパーティションに指定する方法
root (hd1,2)
※GRUB Legacy（GRUB1）の設定ファイル「/boot/grub/menu.lst」でルートパーティションを指定するには、「root (hdディスク番号,パーティション番号)」と指定します。その際、番号はどちらも0から数えます。

・GRUB Legacyの設定ファイル「/boot/grub/menu.lst」において、ルートパーティションを1番目のディスクの4番目のパーティションに指定する方法
root (hd0,3)
GRUB Legacy（GRUB1）の設定ファイル「/boot/grub/menu.lst」でルートパーティションを指定するには、「root (hdディスク番号,パーティション番号)」と指定します。その際、番号はどちらも0から数えます。

・GRUB Legacyの設定ファイル「/boot/grub/menu.lst」において、システム起動時のカーネルイメージ「/boot/vmlinuz-2.6.35 」と起動オプションを指定するコマンド
kernel /boot/vmlinuz-2.6.35 root=/dev/hda1

・GRUB2の設定ファイル「/boot/grub/grub.cfg」の抜粋です。ルートパーティションを2番目のディスクの3番目のパーティションに指定するコマンド
set root=______________
(hd1,3)
※GRUB2でパーティションを指定する際は、「(hdディスク番号,パーティション番号)」のように指定します。ディスク番号は0から、パーティション番号は1から数えます。

・GRUB2の設定ファイル「/boot/grub/grub.cfg」の抜粋です。ルートパーティションを1番目のディスクの4番目のパーティションに指定したい。下線部の記述として適切なものは次のうちどれか。
set root=______________
(hd0,4)
※GRUB2でパーティションを指定する際は、「(hdディスク番号,パーティション番号)」のように指定します。ディスク番号は0から、パーティション番号は1から数えます。

・ルートパーティションを「/dev/sda2」に指定して起動させるコマンド
grub> linux /boot/vmlinuz-2.6.35 root=/dev/sda2

・「/sbin/init」の代わりに「/bin/bash」を起動するコマンド
grub> kernel /boot/vmlinuz-2.6.35 init=/bin/bash

・メンテナンス用にシングルユーザモードで起動するコマンド
grub> kernel /boot/vmlinuz-2.6.35 _____________
1
s
single

・起動中のカーネルから出力される情報を抑制するコマンド
grub> linux /boot/vmlinuz-2.6.35 quiet
※grub> linux カーネルイメージ [オプション]

・第一段階のブートローダが通常格納される場所
MBR（マスターブートレコード）

・コマンドの実行結果
# dd if=/dev/zero of=/dev/sda bs=446 count=1
ブートローダのみがゼロクリアされる

・ブートローダにGRUBを使っているHDDに追加で別のOSをインストールしたところ、MBR（マスターブートレコード）が書き換えられてしまい、GRUBが起動しなくなってしまった。バックアップからHDDのMBRを復元したいが既存のパーティションテーブルは残しておきたい。
上記の要件にしたがって作業を行うにあたって、以下のコマンドの空欄に当てはまるもの
# dd if=mbr_backup.img of=/dev/sda bs=[　　　] count=1
440
446

・systemdの動作するシステムにおいて、シングルユーザーモードで起動したい。適切なカーネルパラメータ
systemd.unit=rescue

■共有ライブラリの管理
・共有ライブラリの検索パスを設定する環境変数
LD_LIBRARY_PATH

・あるプログラムが必要としている共有ライブラリを表示するコマンド
ldd

・「/bin/bash」を実行するときに必要となる共有ライブラリを調べるためのコマンド
ldd /bin/bash

・共有ライブラリのキャッシュファイル「/etc/ld.so.cache」を更新するコマンド
ldconfig

・一般的な共有ライブラリの格納場所として間違っているもの
/lib/shared

・プログラムの実行時に、共有ライブラリの場所を検索するために使用されるファイル
/etc/ld.so.cache

・共有ライブラリを格納するためのディレクトリを新たに作成した。ldconfigコマンドを使用して共有ライブラリのキャッシュファイルを更新するためには、どのファイルに新しいディレクトリのパスを記述する必要があるか。
/etc/ld.so.conf

■Debianパッケージ管理
・APTツールにおいてapt-getとapt-cacheの機能を統合したコマンド
apt

・APTツールにおいてインターネット上ないしはメディア上のパッケージ情報のデータベースを使い、依存関係を調整しながら、パッケージのインストール・アンインストール・アップグレードを行うことができるコマンド
apt-get

・apt-getコマンドを使用して、パッケージのデータベースを最新版に更新したい。
apt-get update

・apt-getコマンドを使用して、過去に取得したパッケージファイルを削除したい。
apt-get clean

・apt-getコマンドを使用して、ディストリビューションを最新版にしたい。
apt-get dist-upgrade

・apt-getコマンドを使用して、「apache2」パッケージをインストールしたい。
apt-get install apache2

・apt-getコマンドを使用して、インストール済みの全パッケージをアップグレードしたい。
apt-get upgrade

・apt-getコマンドを使用して、「apache2」パッケージをアンインストールしたい。
apt-get remove apache2

・apt-getコマンドの「update」と「upgrade」サブコマンドの説明として正しいもの
「update」はパッケージのデータベースを最新版に更新する
「upgrade」はインストール済の全パッケージのアップグレードを行う

・apt-cacheコマンドを使用して、キーワード「ssh」を含むパッケージを表示させたい。
apt-cache search ssh

・apt-cacheコマンドを使用して、「ssh」パッケージのサイズやファイル名などを含めた情報を表示させたい。
apt-cache show ssh

・apt-cacheコマンドを使用して、「ssh」パッケージが依存しているパッケージの名前を一覧表示させたい。
apt-cache depends ssh

・apt-cacheコマンドを使用して、「ssh」パッケージへ依存しているパッケージを含めた詳細情報を表示させたい。
apt-cache showpkg ssh

・APTツールではネットワーク経由で最新のパッケージを取得することができる。パッケージの取得元(リポジトリ)を設定するファイル
/etc/apt/sources.list

・APTツールにおいてapt-getとapt-cacheの機能を統合したコマンド
apt

・dpkgツールにおいてパッケージのインストール・アンインストールなど、基本的なパッケージ管理を行うコマンド
dpkg

・dpkgコマンドを使用して、「procmail_3.22-16_i386.deb」パッケージをインストールしたい。但し、既に新しいバージョンのパッケージがインストールされている場合には、インストールを行いたくない。
dpkg -Gi procmail_3.22-16_i386.deb
dpkg -G --install procmail_3.22-16_i386.deb
※インストールを行うアクションは「-i(--install)」です。また、「-G」オプションを併用することで、既に新しいバージョンのパッケージがインストールされている場合は、インストールを行わないようにすることができます。

・dpkgコマンドを使用して、「procmail_3.22-16_i386.deb」パッケージをインストールしたい。
dpkg -i procmail_3.22-16_i386.deb
dpkg --install procmail_3.22-16_i386.deb

・dpkgツールにおいてインストール済みのパッケージを、インストールした時と同じように再設定するコマンド
dpkg-reconfigure

・dpkgコマンドを使用して、「/usr/share/doc/ssh」ファイルのインストール元パッケージを表示させたい。
dpkg -S /usr/share/doc/ssh
dpkg --search /usr/share/doc/ssh

・dpkgコマンドを使用して、インストールが完了していない不完全なパッケージを表示したい。
dpkg -C
dpkg --audit

・dpkgコマンドを使用して、「procmail」パッケージを設定ファイルを残してアンインストールしたい。
dpkg -r procmail
dpkg --remove procmail

・dpkgコマンドを使用して、「packages」ディレクトリに格納されているパッケージをまとめてインストールしたい。
dpkg -Ri packages
dpkg -R --install packages

・dpkgコマンドを使用して、「procmail_3.22-16_i386.deb」パッケージをインストールしたい。但し、既に同じバージョンのパッケージがインストールされている場合には、インストールを行いたくない。
dpkg -Ei procmail_3.22-16_i386.deb
dpkg -E --install procmail_3.22-16_i386.deb

・dpkgコマンドを使用して、「procmail」パッケージを設定ファイルを含めて全てアンインストールしたい。
dpkg -P procmail
dpkg --purge procmail

・dpkgコマンドを使用して、インストール済みのパッケージを一覧表示させたい。
dpkg -l
dpkg --list

・dpkgコマンドを使用して、「ssh」パッケージからインストールされたファイルを一覧表示させたい。
dpkg -L ssh
dpkg --listfiles ssh

・dpkgコマンドを使用して、「ssh」パッケージの詳細情報を表示させたい。
dpkg -s ssh
dpkg --status ssh

・dpkgコマンドの「-r」と「-P」アクションの説明として正しいもの
「-r」は設定ファイルを残してパッケージをアンインストールする
「-P」は設定ファイルを含め完全にパッケージをアンインストールする

・dpkgツールの設定ファイル
/etc/dpkg/dpkg.cfg

